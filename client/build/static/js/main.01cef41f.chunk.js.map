{"version":3,"sources":["components/SidebarNav/index.js","pages/dashboard/index.js","pages/myProfile/index.js","API/api.js","pages/CreateSession/index.js","components/SessionCardWithJoin/index.js","components/SessionCardWithoutJoin/index.js","pages/FindSession/index.js","pages/login/index.js","pages/createAccount/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["sidebarNav","state","collapsed","handleCurrentPageCheck","_this","props","currentPagePath","document","getElementsByTagName","classList","add","handleLogOut","localStorage","clear","handleExpand","getElementById","style","width","marginLeft","handleCollapse","handleSidebarChange","toggle","setState","this","react_default","a","createElement","id","react_router_dom","to","onClick","className","children","Component","Dashboard","SidebarNav","Container_default","Jumbotron_default","Row_default","Col_default","Card_default","Body","Title","Text","href","UserInfo","username","getItem","instrument","parseInt","skillLevel","renderInstrumentName","instrumentId","window","location","pathname","xl","lg","md","sm","xs","src","alt","Button_default","variant","size","DropdownButton_default","title","DropdownItem_default","Header","ListGroup_default","Item","api","userLogin","usernameData","axios","post","createNewUser","createUserData","getJamSessions","currentUserId","getUserName","userId","createNewSession","createSessionData","viewJamSession","sessionId","get","joinSession","joiningUserData","put","CreateSession","sessionName","collaborators","collaboratorsArr","sessionDate","sessionTime","sessionDetails","handleFormSubmit","event","preventDefault","alert","name","date","time","description","usr1","inst1","skillLevel1","inst2","skillLevel2","inst3","skillLevel3","inst4","skillLevel4","inst5","skillLevel5","console","log","API","then","sessionData","catch","err","handleChange","_event$target","target","value","Object","defineProperty","handleArrayChange","copy","toConsumableArray","handleCollaborators","createCollaboratorsForm","collaboratorForms","_loop","i","push","key","Form_default","Group","controlId","Label","Control","as","onChange","defaultValue","onSubmit","rows","placeholder","type","SessionCardWithJoin","sessionMembers","map","collaborator","collaboratorInstrument","skill_level","sessionPositions","position","positionName","fontWeight","margin-top","color","SessionCardWithoutJoin","FindSession","jamSessions","currentId","jamSessionsData","data","renderSessions","positionDetails","skill_level2","skill_level3","skill_level4","skill_level5","usr2","components_SessionCardWithJoin","scheduled_date","scheduled_time","users","joinJamSession","usr3","usr4","usr5","components_SessionCardWithoutJoin","positionId","userDataObj","userPosition","reload","_this2","length","session","textAlign","login","password","handleSubmit","trim","display","userData","setItem","replace","InputGroup_default","FormControl_default","required","aria-label","aria-describedby","fontSize","createAccount","passwordConfirm","dataResponse","Footer","App","react_router","exact","path","component","Login","MyProfile","components_Footer","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01cef41f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./style.css\";\n\nclass sidebarNav extends Component {\n\n  // State that holds a boolean value representing whether or not the side navbar is collapsed. Default/starts off as true.\n  state = {\n    collapsed: true\n  }\n\n  // Calls the function that checks the current page on every component mount.\n  componentDidMount() {\n    this.handleCurrentPageCheck();\n  }\n\n  // Function that checks which pahe the user is currently on and adds a class to the <a> element to give it special styling.\n  handleCurrentPageCheck = () => {\n\n    // variable currentPage is equal to the pathURL being passed as an argument.\n    const currentPage = this.props.currentPagePath;\n\n    // currentLink is referencing the specific <a> element that is the current pages URL path.\n    let currentLink;\n\n    // switch case for each URL and its relating <a> element in the side navbar.\n    switch (currentPage) {\n      case \"/myProfile\":\n        currentLink = document.getElementsByTagName(\"a\")[1];\n        currentLink.classList.add(\"current-page\");\n        break;\n\n      case \"/findSession\":\n        currentLink = document.getElementsByTagName(\"a\")[2];\n        currentLink.classList.add(\"current-page\");\n        break;\n\n      case \"/createSession\":\n        currentLink = document.getElementsByTagName(\"a\")[3];\n        currentLink.classList.add(\"current-page\");\n        break;\n\n      default:\n        currentLink = document.getElementsByTagName(\"a\")[0];\n        currentLink.classList.add(\"current-page\");\n        break;\n    }\n  }\n\n  // Function that handles the logout, clears local storage of any user info.\n  handleLogOut = () => {\n    localStorage.clear();\n  }\n\n  // Function that handles expanding the navbar.\n  handleExpand = () => {\n    document.getElementById(\"sidebarNav\").style.width = \"270px\";\n    document.getElementById(\"main\").style.marginLeft = \"270px\";\n  }\n\n  // Function that collapses the navbar.\n  handleCollapse = () => {\n    document.getElementById(\"sidebarNav\").style.width = \"0\";\n    document.getElementById(\"main\").style.marginLeft = \"0\";\n  }\n\n  // Function that checks if the navbar needs to be expanded or collapsed, depending on the state. Switches the state of collapsed to the opposite of what is was at.\n  handleSidebarChange = () => {\n    document.getElementById(\"openbtn\").classList.toggle(\"sidebar-close-icon\");\n    this.state.collapsed ? this.handleExpand() : this.handleCollapse();\n    this.setState({ collapsed: !this.state.collapsed });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div id=\"sidebarNav\">\n          <ul>\n            <Link to=\"/dashboard\" id=\"dashboardLink\"><li>Dashboard</li></Link>\n            <Link to=\"/myProfile\"><li>My Profile</li></Link>\n            <Link to=\"/findSession\"><li>Find Sessions</li></Link>\n            <Link to=\"/createSession\"><li>Create Session</li></Link>\n            <Link to=\"/\" onClick={this.handleLogOut}><li>Logout</li></Link>\n          </ul>\n        </div>\n\n        <div id=\"main\">\n          <button id=\"openbtn\" onClick={this.handleSidebarChange}>\n            <div className=\"bar-icon1\"></div>\n            <div className=\"bar-icon2\"></div>\n            <div className=\"bar-icon3\"></div>\n          </button>\n        </div>\n\n        {this.props.children}\n\n      </div>\n    );\n  }\n}\n\nexport default sidebarNav;","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport SidebarNav from \"../../components/SidebarNav\";\n\nimport \"./style.css\";\n\nfunction Dashboard() {\n  return (\n    <SidebarNav>\n      <Container>\n        <Jumbotron className=\"jumboBg\">\n          <Row>\n            <Col>\n              <div className=\"jumboText\">\n                <h1 className=\"text-center\">Welcome to Jamster!</h1>\n                <p className=\"jumboP text-center\">Connect with musicians in your area.</p>\n              </div>\n            </Col>\n          </Row>\n        </Jumbotron>\n        <Row>\n          <Col>\n            <Card className=\"text-center\">\n              <Card.Body>\n                <Card.Title>My Profile</Card.Title>\n                <Card.Text>\n                  <a className=\"dashBtn\" href=\"/myprofile\"> <i className=\"fas fa-id-card fa-5x\" /></a>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Card className=\"text-center\">\n              <Card.Body>\n                <Card.Title>Create Session</Card.Title>\n                <Card.Text>\n                  <a className=\"dashBtn\" href=\"/createsession\"> <i className=\"fas fa-edit fa-5x\" /></a>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </SidebarNav>\n  );\n}\n\nexport default Dashboard;","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport DropdownItem from \"react-bootstrap/DropdownItem\";\nimport SidebarNav from \"../../components/SidebarNav\";\n\nclass UserInfo extends Component {\n    state = {\n        username: localStorage.getItem(\"username\"),\n        instrument: parseInt(localStorage.getItem(\"instrumentId\")),\n        skillLevel: parseInt(localStorage.getItem(\"skillLevel\")),\n    }\n\n    renderInstrumentName = (instrumentId) => {\n        switch (instrumentId) {\n            case 1:\n                return \"Bass\"\n            case 2:\n                return \"Drums\"\n            case 3:\n                return \"Guitar\"\n            case 4:\n                return \"Keyboard\"\n            case 5:\n                return \"Vocals\"\n            default:\n                return \"Unknown Instrument!\"\n        }\n    }\n\n    render() {\n        return (\n            <SidebarNav currentPagePath={window.location.pathname}>\n                <Container>\n                    <Jumbotron className=\"jumboBg\">\n                        <Row>\n                            <Col>\n                                <div className=\"jumboText\">\n                                    <h1 className=\"text-center mb-4\">My Profile</h1>\n                                </div>\n\n                            </Col>\n                        </Row>\n                    </Jumbotron>\n                    <Card>\n\n                        <Row>\n                            <Col xl={6} lg={6} md={6} sm={12} xs={12}>\n                                <img src=\"https://via.placeholder.com/300x300\" alt=\"null\" />\n                                <br />\n                                <Button variant=\"info\" size=\"lg\" className=\"mt-2 mr-1\">Edit Profile</Button>\n                                <DropdownButton className=\"mt-2 mr-1\" style={{ 'width': '187px' }} id=\"dropdown-basic-button\" title=\"Add Instrument\" size=\"lg\">\n                                    <DropdownItem href=\"#/action-1\">Harp</DropdownItem>\n                                    <DropdownItem href=\"#/action-2\">Organ</DropdownItem>\n                                    <DropdownItem href=\"#/action-3\">Hydrolauphone</DropdownItem>\n                                    <DropdownItem href=\"#/action-4\">Thoramin</DropdownItem>\n                                    <DropdownItem href=\"#/action-5\">Jaws Harp</DropdownItem>\n                                    <DropdownItem href=\"#/action-6\">Ocarina</DropdownItem>\n                                </DropdownButton>\n                                <DropdownButton variant=\"danger\" className=\"mt-2 mr-1\" style={{ 'width': '143px' }} id=\"dropdown-basic-button\" title=\"Skill Level\" size=\"lg\">\n                                    <DropdownItem href=\"#/action-1\">1</DropdownItem>\n                                    <DropdownItem href=\"#/action-2\">2</DropdownItem>\n                                    <DropdownItem href=\"#/action-3\">3</DropdownItem>\n                                    <DropdownItem href=\"#/action-4\">4</DropdownItem>\n                                    <DropdownItem href=\"#/action-6\">5</DropdownItem>\n                                </DropdownButton>\n                            </Col>\n\n                            <Col xl={6} lg={6} md={6} sm={12} xs={12}>\n\n                                <Card>\n                                    <Card.Header><h2>My Info</h2></Card.Header>\n                                    <Card.Body>\n                                        <Card.Title><h3>Username:</h3></Card.Title>\n                                        <h5>{this.state.username}</h5>\n                                        <hr />\n                                        <hr />\n                                        <Card.Title><h3>Instruments:</h3></Card.Title>\n                                        <ListGroup>\n                                            <ListGroup.Item variant=\"success\">\n                                                <h4>\n                                                    {this.renderInstrumentName(this.state.instrument)}\n                                                </h4>\n                                                <h5>Skill Level: {this.state.skillLevel}</h5></ListGroup.Item>\n                                        </ListGroup>\n                                    </Card.Body>\n                                </Card>\n\n                            </Col>\n                        </Row>\n                    </Card>\n                </Container>\n            </SidebarNav>\n        );\n    }\n}\n\nexport default UserInfo;","import axios from \"axios\";\n\nexport default {\n    // login call\n    userLogin: function (usernameData) {\n        // I think it's a POST request since we need to access what the user entered into the fields.\n        return axios.post(\"/api/jamster/login\", usernameData);\n    },\n    // create account call\n    createNewUser: function (createUserData) {\n        return axios.post(\"/api/jamster/createNewUser\", createUserData);\n    },\n    // find sessions call\n    getJamSessions: function (currentUserId) {\n        return axios.post(\"/api/jamster/findSessions\", currentUserId);\n    },\n    getUserName: function (userId) {\n        return axios.post(\"/api/jamster/getUsername\", userId);\n    },\n    // create a session call\n    createNewSession: function (createSessionData) {\n        return axios.post(\"/api/jamster/createSession\", createSessionData);\n    },\n    // get session info\n    viewJamSession: function (sessionId) {\n        return axios.get(\"/api/jamster/sessions/\" + sessionId);\n    },\n    // joining a jam session\n    joinSession: function (joiningUserData) {\n        return axios.put(\"/api/jamster/joinSession\", joiningUserData);\n    }\n}","import React, { Component } from \"react\";\nimport API from \"../../API/api\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport SidebarNav from \"../../components/SidebarNav\";\n\nimport \"./style.css\";\n\nclass CreateSession extends Component {\n    state = {\n        sessionName: \"\",\n        collaborators: 0,\n        collaboratorsArr: [\n            {\n                instrument: \"\",\n                skillLevel: \"\"\n            },\n            {\n                instrument: \"\",\n                skillLevel: \"\"\n            },\n            {\n                instrument: \"\",\n                skillLevel: \"\"\n            },\n            {\n                instrument: \"\",\n                skillLevel: \"\"\n            },\n            {\n                instrument: \"\",\n                skillLevel: \"\"\n            }\n        ],\n        sessionDate: \"\",\n        sessionTime: \"\",\n        sessionDetails: \"\"\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.sessionName === \"\" ||\n            this.state.sessionDate === \"\" ||\n            this.state.sessionTime === \"\" ||\n            this.state.collaboratorsArr[0] === \"\") {\n            alert(\"Please Complete the Required Fields\");\n        }\n        else if (parseInt(this.state.collaborators) === 0) {\n            alert(\"Please Select at Least 1 Collaborator\");\n        }\n        else {\n            const createSessionData = {\n                name: this.state.sessionName,\n                date: this.state.sessionDate,\n                time: this.state.sessionTime,\n                description: this.state.sessionDetails,\n                usr1: parseInt(localStorage.getItem(\"userId\")),\n                inst1: parseInt(localStorage.getItem(\"instrumentId\")),\n                skillLevel1: parseInt(localStorage.getItem(\"skillLevel\")),\n                inst2: parseInt(this.state.collaboratorsArr[0].instrument),\n                skillLevel2: parseInt(this.state.collaboratorsArr[0].skillLevel),\n                inst3: parseInt(this.state.collaboratorsArr[1].instrument) || null,\n                skillLevel3: parseInt(this.state.collaboratorsArr[1].skillLevel) || null,\n                inst4: parseInt(this.state.collaboratorsArr[2].instrument) || null,\n                skillLevel4: parseInt(this.state.collaboratorsArr[2].skillLevel) || null,\n                inst5: parseInt(this.state.collaboratorsArr[3].instrument) || null,\n                skillLevel5: parseInt(this.state.collaboratorsArr[3].skillLevel) || null\n            }\n\n            console.log(createSessionData);\n\n            API.createNewSession(createSessionData)\n                .then((sessionData) => {\n                    console.log(sessionData);\n                    this.setState({\n                        sessionName: \"\",\n                        collaboratorsArr: [\n                            {\n                                instrument: \"\",\n                                skillLevel: \"\"\n                            },\n                            {\n                                instrument: \"\",\n                                skillLevel: \"\"\n                            },\n                            {\n                                instrument: \"\",\n                                skillLevel: \"\"\n                            },\n                            {\n                                instrument: \"\",\n                                skillLevel: \"\"\n                            }\n                        ],\n                        collaborators: \"0\",\n                        sessionDate: \"\",\n                        sessionTime: \"\",\n                        sessionDetails: \"\"\n                    });\n                })\n                .catch((err) => console.log(err));\n        }\n\n    };\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    // Method for handling an array of collaborators and their info\n    // Passing in the event and the 'id' as arguments. id = whatever index the collaborator is at.\n    handleArrayChange = (event, id) => {\n        const name = event.target.name;\n        let value = event.target.value;\n        // Making a copy of the state's array of collaborators.\n        let copy = [...this.state.collaboratorsArr];\n\n        // parseInt the instrumentId or skill level into a number value\n        value = parseInt(value);\n\n        // Setting the name equal to the changed value at the appropriate index location.\n        copy[id][name] = value;\n\n        // Setting the state's collaborators array equal to the newly updated copy array.\n        this.setState({\n            collaboratorsArr: copy\n        });\n    }\n\n    handleCollaborators = (event) => {\n        this.setState({\n            collaborators: parseInt(event.target.value)\n        });\n    }\n\n    createCollaboratorsForm = () => {\n        let collaboratorForms = [];\n\n        for (let i = 0; i < this.state.collaborators; i++) {\n            collaboratorForms.push(\n                <Row key={i}>\n                    <Col>\n                        <Form.Group controlId=\"sessionForm.Instrument\">\n                            <Form.Label>Instrument (Required)</Form.Label>\n                            <Form.Control as=\"select\" onChange={(event) => this.handleArrayChange(event, i)} name=\"instrument\">\n                                <option defaultValue=\"\">Choose...</option>\n                                <option value=\"1\">Bass</option>\n                                <option value=\"2\">Drums</option>\n                                <option value=\"3\">Guitar</option>\n                                <option value=\"4\">Keyboard</option>\n                                <option value=\"5\">Vocals</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Col>\n                    <Col>\n                        <Form.Group controlId=\"sessionForm.Skill\">\n                            <Form.Label>Skill Level (Required)</Form.Label>\n                            <Form.Control as=\"select\" onChange={(event) => this.handleArrayChange(event, i)} name=\"skillLevel\">\n                                <option defaultValue=\"\">Choose...</option>\n                                <option value=\"1\">1 (Beginner)</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5 (Advanced)</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Col>\n                </Row >\n            );\n        };\n        return collaboratorForms;\n    }\n\n    render() {\n        return (\n            <SidebarNav currentPagePath={window.location.pathname}>\n                <Container>\n                    <Jumbotron className=\"jumboBg\">\n                        <Row>\n                            <Col>\n\n                                <div className=\"jumboText\">\n                                    <h1 className=\"text-center\">Create Session</h1>\n\n                                    <p className=\"jumboP text-center\">Create Your Own Jam Session Below!</p>\n                                </div>\n\n                            </Col>\n                        </Row>\n                    </Jumbotron>\n\n                    <Jumbotron>\n                        <Row>\n                            <Col>\n                                <Card>\n\n                                    <Form className=\"m-4\" onSubmit={this.handleFormSubmit}>\n\n                                        <Row>\n                                            <Col>\n                                                <Form.Group controlId=\"sessionForm.Name\">\n                                                    <Form.Label>Session Name (Required)</Form.Label>\n                                                    <Form.Control as=\"textarea\" rows=\"1\" placeholder=\"Session Name\" onChange={this.handleChange} name=\"sessionName\" value={this.state.sessionName} />\n                                                </Form.Group>\n                                            </Col>\n                                            <Col>\n                                                <Form.Group controlId=\"sessionForm.Collaborators\">\n                                                    <Form.Label>Number of Collaborators (Required)</Form.Label>\n                                                    <Form.Control as=\"select\" onChange={this.handleCollaborators} name=\"collaborators\" value={this.state.collaborators}>\n                                                        <option defaultValue=\"0\">Choose...</option>\n                                                        <option value=\"1\">1</option>\n                                                        <option value=\"2\">2</option>\n                                                        <option value=\"3\">3</option>\n                                                        <option value=\"4\">4</option>\n                                                        {/* <option value=\"5\">5</option> */}\n                                                    </Form.Control>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n\n                                        {this.createCollaboratorsForm()}\n\n                                        <Row>\n                                            <Col>\n                                                <Form.Group controlId=\"sessionForm.Date\">\n                                                    <Form.Label>Date (Required)</Form.Label>\n                                                    <Form.Control type=\"date\" placeholder=\"\" onChange={this.handleChange} name=\"sessionDate\" value={this.state.sessionDate} />\n                                                </Form.Group>\n                                            </Col>\n                                            <Col>\n                                                <Form.Group controlId=\"sessionForm.Time\">\n                                                    <Form.Label>Time (Required)</Form.Label>\n                                                    <Form.Control type=\"time\" placeholder=\"\" onChange={this.handleChange} name=\"sessionTime\" value={this.state.sessionTime} />\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Group controlId=\"sessionForm.Details\">\n                                                    <Form.Label>Session Details (Optional)</Form.Label>\n                                                    <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Add Any Additional Session Details\" onChange={this.handleChange} name=\"sessionDetails\" value={this.state.sessionDetails} />\n                                                </Form.Group>\n                                            </Col>\n                                            <Col>\n                                                <Form.Label>Your Session(s)</Form.Label>\n                                                <Card>\n                                                    <Card.Body>\n                                                        <Card.Text>\n                                                            <li>{this.state.sessionName}</li>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                        </Row>\n\n\n                                        <Button variant=\"primary\" type=\"submit\">\n                                            Submit\n                                    </Button>\n\n                                    </Form>\n\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Jumbotron>\n                </Container>\n            </SidebarNav>\n        );\n    }\n}\n\nexport default CreateSession;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport \"./style.css\";\n\nfunction SessionCardWithJoin(props) {\n    return (\n        <Card>\n            <Row>\n\n                <Col xl=\"12\">\n                    <Card.Title className=\"header\" as=\"h2\">{props.sessionName}</Card.Title>\n                </Col>\n\n                <Card.Body>\n                    <Col xl=\"12\">\n                        <h4>Jam Session Date: {props.sessionDate} at {props.sessionTime}</h4>\n                    </Col>\n                    <br />\n                    <h4>Current Session Members</h4>\n                    <Col>\n\n                    </Col>\n                    {\n                        props.sessionMembers.map((collaborator) => {\n                            let collaboratorInstrument;\n                            switch (parseInt(collaborator.instrument)) {\n                                case 1:\n                                    collaboratorInstrument = \"Bass\";\n                                    break;\n\n                                case 2:\n                                    collaboratorInstrument = \"Drums\";\n                                    break;\n                                case 3:\n                                    collaboratorInstrument = \"Guitar\";\n                                    break;\n\n                                case 4:\n                                    collaboratorInstrument = \"Keyboard\";\n                                    break;\n                                case 5:\n                                    collaboratorInstrument = \"Vocals\";\n                                    break;\n                                default:\n                                    collaboratorInstrument = \"\";\n                            }\n                            return (\n                                <Card>\n                                    <Col key={collaborator.id}>\n                                        <h5>Name: {collaborator.username}</h5>\n                                        <h5>Instrument: {collaboratorInstrument}</h5>\n                                        <h5>Skill Level: {collaborator.skill_level}</h5>\n                                    </Col>\n                                </Card>\n                            )\n                        }\n                        )}\n\n                    <hr />\n\n                    <h4>Open Positions</h4>\n                    {\n                        props.sessionPositions.map((position) => {\n                            let positionName;\n                            switch (parseInt(position.instrument)) {\n                                case 1:\n                                    positionName = \"Bass\";\n                                    break;\n\n                                case 2:\n                                    positionName = \"Drums\";\n                                    break;\n                                case 3:\n                                    positionName = \"Guitar\";\n                                    break;\n\n                                case 4:\n                                    positionName = \"Keyboard\";\n                                    break;\n                                case 5:\n                                    positionName = \"Vocals\";\n                                    break;\n                                default:\n                                    positionName = \"\";\n                            }\n                            return (\n                                <Card>\n                                    <Col>\n                                        <h5>Instrument: {positionName}</h5>\n                                        <h5>Skill Level: {position.skillLevel}</h5>\n                                        {parseInt(localStorage.getItem(\"skillLevel\")) >= position.skillLevel && parseInt(localStorage.getItem(\"instrumentId\")) === position.instrument ? (\n                                            <div>\n                                                <h5 style={{ \"fontWeight\": \"bold\", \"margin-top\": \"10px\" }}>You qualify for this position</h5>\n                                                <Button variant=\"primary\" size=\"lg\" onClick={props.onClick}>Join Session</Button>\n                                            </div>\n                                        ) : <h5 style={{ \"fontWeight\": \"bold\", \"margin-top\": \"10px\", \"color\": \"#FF0000\" }}>You don't qualify for this position</h5>}\n                                    </Col>\n                                </Card>\n                            )\n                        }\n                        )}\n\n                </Card.Body>\n            </Row>\n            <Row>\n                <Col>\n                    <h4>Session Details</h4>\n                    <p>{props.sessionDetails}</p>\n                </Col>\n                {/* <Col>\n                    <Button variant=\"primary\" size=\"lg\" onClick={props.onClick}>Join Session</Button>\n                </Col> */}\n            </Row>\n        </Card>\n    );\n}\n\nexport default SessionCardWithJoin;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nfunction SessionCardWithoutJoin(props) {\n    return (\n        <Card>\n            <Row>\n\n                <Col xl=\"12\">\n                    <Card.Title className=\"header\" as=\"h2\">{props.sessionName}</Card.Title>\n                </Col>\n\n                <Card.Body>\n                    <Col xl=\"12\">\n                        <h4>Jam Session Date: {props.sessionDate} at {props.sessionTime}</h4>\n                    </Col>\n                    <br />\n                    <h4>Current Session Members</h4>\n                    <Col>\n\n                    </Col>\n                    {\n                        props.sessionMembers.map((collaborator) => {\n                            let collaboratorInstrument;\n                            switch (parseInt(collaborator.instrument)) {\n                                case 1:\n                                    collaboratorInstrument = \"Bass\";\n                                    break;\n\n                                case 2:\n                                    collaboratorInstrument = \"Drums\";\n                                    break;\n                                case 3:\n                                    collaboratorInstrument = \"Guitar\";\n                                    break;\n\n                                case 4:\n                                    collaboratorInstrument = \"Keyboard\";\n                                    break;\n                                case 5:\n                                    collaboratorInstrument = \"Vocals\";\n                                    break;\n                                default:\n                                    collaboratorInstrument = \"\";\n                            }\n                            return (\n                                <Col key={collaborator.id}>\n                                    <h5>Name: {collaborator.username}</h5>\n                                    <h5>Instrument: {collaboratorInstrument}</h5>\n                                    <h5>Skill Level: {collaborator.skill_level}</h5>\n                                </Col>\n                            )\n                        }\n                        )}\n                </Card.Body>\n            </Row>\n            <Row>\n                <Col>\n                    <h4>Session Details</h4>\n                    <p>{props.sessionDetails}</p>\n                </Col>\n            </Row>\n        </Card >\n    );\n}\n\nexport default SessionCardWithoutJoin;","import React, { Component } from \"react\";\nimport API from \"../../API/api\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SessionCardWithJoin from \"../../components/SessionCardWithJoin\";\nimport SessionCardWithoutJoin from \"../../components/SessionCardWithoutJoin\";\nimport SidebarNav from \"../../components/SidebarNav\";\n\nclass FindSession extends Component {\n\n    state = {\n        jamSessions: []\n    }\n\n    componentDidMount() {\n        const userId = parseInt(localStorage.getItem(\"userId\"))\n        this.getJamSessions(userId);\n    }\n\n    getJamSessions = (currentUserId) => {\n\n        // Passing back an object containing the current user's id.\n        const currentId = {\n            id: currentUserId\n        }\n\n        API.getJamSessions(currentId)\n            .then((jamSessionsData) => {\n                console.log(jamSessionsData.data);\n                this.setState({\n                    jamSessions: jamSessionsData.data\n                });\n            })\n            .catch((err) => console.log(err));\n    }\n\n    renderSessions = (sessionData) => {\n        // Checking If the user qualifies or not.\n        const sessionPositions = [];\n        let positionDetails;\n\n        if (sessionData.inst2 !== null) {\n            positionDetails = {\n                instrument: sessionData.inst2,\n                skillLevel: sessionData.skill_level2\n            }\n            sessionPositions.push(positionDetails);\n        }\n        if (sessionData.inst3 !== null) {\n            positionDetails = {\n                instrument: sessionData.inst3,\n                skillLevel: sessionData.skill_level3\n            }\n            sessionPositions.push(positionDetails);\n        }\n        if (sessionData.inst4 !== null) {\n            positionDetails = {\n                instrument: sessionData.inst4,\n                skillLevel: sessionData.skill_level4\n            }\n            sessionPositions.push(positionDetails);\n        }\n        if (sessionData.inst5 !== null) {\n            positionDetails = {\n                instrument: sessionData.inst5,\n                skillLevel: sessionData.skill_level5\n            }\n            sessionPositions.push(positionDetails);\n        }\n\n        // return <SessionCardWithJoin\n        //     key={sessionData.id}\n        //     sessionId={sessionData.id}\n        //     sessionName={sessionData.name}\n        //     sessionDetails={sessionData.description}\n        //     sessionDate={sessionData.scheduled_date}\n        //     sessionTime={sessionData.scheduled_time}\n        //     sessionMembers={sessionData.users}\n        //     sessionPositions={sessionPositions}\n        //     onClick={() => this.joinJamSession()}\n        // />\n\n        if (sessionData.usr2 === null && parseInt(localStorage.getItem(\"instrumentId\")) === sessionData.inst2 && localStorage.getItem(\"skillLevel\") >= sessionData.skill_level2) {\n            return <SessionCardWithJoin\n                key={sessionData.id}\n                sessionName={sessionData.name}\n                sessionDetails={sessionData.description}\n                sessionDate={sessionData.scheduled_date}\n                sessionTime={sessionData.scheduled_time}\n                sessionMembers={sessionData.users}\n                sessionPositions={sessionPositions}\n                onClick={() => this.joinJamSession(2, sessionData.id)}\n            />\n        }\n        else if (sessionData.usr3 === null && parseInt(localStorage.getItem(\"instrumentId\")) === sessionData.inst3 && localStorage.getItem(\"skillLevel\") >= sessionData.skill_level3) {\n            return <SessionCardWithJoin\n                key={sessionData.id}\n                sessionName={sessionData.name}\n                sessionDetails={sessionData.description}\n                sessionDate={sessionData.scheduled_date}\n                sessionTime={sessionData.scheduled_time}\n                sessionMembers={sessionData.users}\n                sessionPositions={sessionPositions}\n                onClick={() => this.joinJamSession(3, sessionData.id)}\n            />\n        }\n\n        else if (sessionData.usr4 === null && parseInt(localStorage.getItem(\"instrumentId\")) === sessionData.inst4 && localStorage.getItem(\"skillLevel\") >= sessionData.skill_level4) {\n            return <SessionCardWithJoin\n                key={sessionData.id}\n                sessionName={sessionData.name}\n                sessionDetails={sessionData.description}\n                sessionDate={sessionData.scheduled_date}\n                sessionTime={sessionData.scheduled_time}\n                sessionMembers={sessionData.users}\n                sessionPositions={sessionPositions}\n                onClick={() => this.joinJamSession(4, sessionData.id)}\n            />\n        }\n\n        else if (sessionData.usr5 === null && parseInt(localStorage.getItem(\"instrumentId\")) === sessionData.inst5 && localStorage.getItem(\"skillLevel\") >= sessionData.skill_level5) {\n            return <SessionCardWithJoin\n                key={sessionData.id}\n                sessionName={sessionData.name}\n                sessionDetails={sessionData.description}\n                sessionDate={sessionData.scheduled_date}\n                sessionTime={sessionData.scheduled_time}\n                sessionMembers={sessionData.users}\n                sessionPositions={sessionPositions}\n                onClick={() => this.joinJamSession(5, sessionData.id)}\n            />\n        }\n\n        else {\n            // If they don't qualify, do not have the option to join. (no button)\n            return <SessionCardWithoutJoin\n                key={sessionData.id}\n                sessionName={sessionData.name}\n                sessionDetails={sessionData.description}\n                sessionDate={sessionData.scheduled_date}\n                sessionTime={sessionData.scheduled_time}\n                sessionMembers={sessionData.users}\n                sessionPositions={sessionPositions}\n            />\n        }\n    }\n\n    joinJamSession = (positionId, sessionId) => {\n        const userDataObj = {\n            userPosition: positionId,\n            userId: localStorage.getItem(\"userId\"),\n            sessionId: sessionId\n        }\n\n        API.joinSession(userDataObj)\n            .then((sessionData) => {\n                alert(\"Session Joined!\");\n                window.location.reload();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    render() {\n        return (\n            <SidebarNav currentPagePath={window.location.pathname}>\n                <Container>\n                    <Jumbotron className=\"jumboBg\">\n                        <Row>\n                            <Col>\n\n                                <div className=\"jumboText\">\n                                    <h1 className=\"text-center\">Find Session</h1>\n\n                                    <p className=\"jumboP text-center\">See sessions created by other musicians!</p>\n                                </div>\n\n                            </Col>\n                        </Row>\n                    </Jumbotron>\n\n                    <Jumbotron>\n                        {this.state.jamSessions.length ? (\n                            this.state.jamSessions.map((session) => this.renderSessions(session)\n                            )) : (\n                                <h3 style={{ \"textAlign\": \"center\" }}>NO JAM SESSIONS!</h3>\n                            )\n                        }\n                    </Jumbotron>\n\n                </Container>\n            </SidebarNav>\n        );\n    }\n}\n\nexport default FindSession;","import React, { Component } from \"react\";\nimport API from \"../../API/api\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\n\nimport \"./style.css\";\n\nclass login extends Component {\n\n  state = {\n    username: \"\",\n    password: \"\"\n  }\n\n  onChange = (event) => {\n    const { name, value } = event.target;\n\n    if (value === \" \") {\n      return \"\";\n    }\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  // Function for when the user submits their log in info.\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.username.trim() === \"\" && this.state.password.trim() === \"\") {\n      document.getElementById(\"login-fail-message\").style.display = \"none\";\n      document.getElementById(\"empty-password-fail\").style.display = \"none\";\n      document.getElementById(\"empty-username-fail\").style.display = \"none\";\n      document.getElementById(\"all-empty-fail\").style.display = \"block\";\n    }\n    else if (this.state.username.trim() === \"\") {\n      document.getElementById(\"all-empty-fail\").style.display = \"none\";\n      document.getElementById(\"login-fail-message\").style.display = \"none\";\n      document.getElementById(\"empty-password-fail\").style.display = \"none\";\n      document.getElementById(\"empty-username-fail\").style.display = \"block\";\n    }\n    else if (this.state.password.trim() === \"\") {\n      document.getElementById(\"all-empty-fail\").style.display = \"none\";\n      document.getElementById(\"login-fail-message\").style.display = \"none\";\n      document.getElementById(\"empty-username-fail\").style.display = \"none\";\n      document.getElementById(\"empty-password-fail\").style.display = \"block\";\n    }\n    else {\n\n      // Creating an object with the usernameto send to the backend.\n      const usernameData = {\n        username: this.state.username,\n        password: this.state.password\n      }\n\n      API.userLogin(usernameData)\n        .then((userData) => {\n          // If the login info was correct, store the relevent info in localstorage,\n          // then bring the user to the dashboard.\n          if (userData.data[1] === true) {\n            localStorage.clear();\n            localStorage.setItem(\"username\", this.state.username);\n            localStorage.setItem(\"userId\", parseInt(userData.data[0].id));\n            localStorage.setItem(\"instrumentId\", parseInt(userData.data[0].instrument));\n            localStorage.setItem(\"skillLevel\", parseInt(userData.data[0].skill_level));\n            window.location.replace(\"/dashboard\");\n          }\n          else {\n            // If the password is incorrect, reveal the message showing that.\n            document.getElementById(\"all-empty-fail\").style.display = \"none\";\n            document.getElementById(\"empty-username-fail\").style.display = \"none\";\n            document.getElementById(\"empty-password-fail\").style.display = \"none\";\n            document.getElementById(\"login-fail-message\").style.display = \"block\";\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <div id=\"login-background\">\n              <h1>Welcome to Jamster</h1>\n              <br />\n              <ul>\n                <li>Connect with other musicians</li>\n                <li>Create a jam session</li>\n                <li>Join other jam sessions</li>\n              </ul>\n            </div>\n          </Col>\n        </Row>\n\n        <br />\n\n        <Row>\n          <Col>\n            <h2 className=\"text-white login-message\">Log in to get your jam on!</h2>\n            <div id=\"all-empty-fail\">Please enter a username and password.</div>\n          </Col>\n        </Row>\n\n        <br />\n\n        <Row className=\"login-form\">\n          <Col xs=\"10\" sm=\"10\" md=\"8\" lg=\"8\" xl=\"5\">\n            <InputGroup size=\"lg\">\n              <FormControl required id=\"username-login\" type=\"text\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" name=\"username\" value={this.state.username} onChange={this.onChange} />\n            </InputGroup>\n            <div id=\"empty-username-fail\">Please enter a username.</div>\n            <br />\n            <InputGroup size=\"lg\">\n              <FormControl id=\"password-login\" type=\"password\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" name=\"password\" value={this.state.password} onChange={this.onChange} />\n            </InputGroup>\n            <div id=\"empty-password-fail\">Please enter a password.</div>\n            <div id=\"login-fail-message\">Incorrect username or password.</div>\n            <br />\n            <Button className=\"p-2 mr-3 mb-4\" type=\"submit\" variant=\"outline-primary\" onClick={this.handleSubmit}>Log In</Button>\n            <span style={{ \"color\": \"#FFFFFF\", \"fontSize\": \"120%\", \"fontWeight\": \"550\" }}>or</span>\n            <Link to=\"/createAccount\"><Button className=\"p-2 ml-3 mb-4\" variant=\"outline-info\">Create Account</Button></Link>\n          </Col>\n        </Row>\n\n      </Container>\n    );\n  }\n}\n\nexport default login;\n","import React, { Component } from \"react\";\nimport API from \"../../API/api\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\n\nimport \"./style.css\";\n\nclass createAccount extends Component {\n\n  state = {\n    instrumentId: \"\",\n    skillLevel: 0,\n    username: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  }\n\n  onChange = (event) => {\n    const { name, value } = event.target;\n\n    if (value === \" \") {\n      return \"\";\n    }\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.instrumentId.trim() === \"\" || this.state.skillLevel === 0 || this.state.username.trim() === \"\" || this.state.password.trim() === \"\" || this.state.passwordConfirm.trim() === \"\") {\n      document.getElementById(\"password-fail-message\").style.display = \"none\";\n      document.getElementById(\"existing-user-message\").style.display = \"none\";\n      document.getElementById(\"empty-field-message\").style.display = \"block\";\n    }\n\n    // If the both password fields match, send an object to the backend to attempt create a user.\n    else if (this.state.password === this.state.passwordConfirm) {\n\n      // Object with all data needed for creating a user.\n      const createUserData = {\n        username: this.state.username,\n        password: this.state.password,\n        skillLevel: parseInt(this.state.skillLevel),\n        instrumentId: parseInt(this.state.instrumentId)\n      }\n\n      API.createNewUser(createUserData)\n        .then((dataResponse) => {\n          // If a new user was successfully created\n          if (dataResponse.data[1] === true) {\n            localStorage.setItem(\"username\", this.state.username);\n            localStorage.setItem(\"userId\", dataResponse.data[0].id);\n            localStorage.setItem(\"instrumentId\", parseInt(this.state.instrumentId));\n            localStorage.setItem(\"skillLevel\", parseInt(this.state.skillLevel));\n            window.location.replace(\"/dashboard\");\n          }\n          else {\n            document.getElementById(\"empty-field-message\").style.display = \"none\";\n            document.getElementById(\"password-fail-message\").style.display = \"none\";\n            document.getElementById(\"existing-user-message\").style.display = \"block\";\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n    else {\n      document.getElementById(\"empty-field-message\").style.display = \"none\";\n      document.getElementById(\"existing-user-message\").style.display = \"none\";\n      document.getElementById(\"password-fail-message\").style.display = \"block\";\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h1 className=\"welcome-header\">Welcome to Jamster!</h1>\n            <p className=\"welcome-message\">To create an account, enter your information below.</p>\n          </Col>\n        </Row>\n\n        <br />\n\n        <Row className=\"create-form\">\n          <Col xs=\"12\" sm=\"9\" md=\"6\" lg=\"5\" xl=\"5\">\n            <div id=\"empty-field-message\">One or more fields are empty.</div>\n            <br />\n            <InputGroup>\n              <FormControl as=\"select\" placeholder=\"Instrument\" aria-label=\"Instrument\" aria-describedby=\"basic-addon1\" name=\"instrumentId\" value={this.state.instrumentId} onChange={this.onChange}>\n                <option defaultValue=\"\">Instrument</option>\n                <option value=\"1\">Bass</option>\n                <option value=\"2\">Drums</option>\n                <option value=\"3\">Guitar</option>\n                <option value=\"4\">Keyboard</option>\n                <option value=\"5\">Vocals</option>\n              </FormControl>\n            </InputGroup>\n\n            <br />\n\n            <InputGroup>\n              <FormControl as=\"select\" placeholder=\"Skill Level\" aria-label=\"Skill Level\" aria-describedby=\"basic-addon1\" name=\"skillLevel\" value={this.state.skillLevel} onChange={this.onChange}>\n                <option defaultValue=\"\">Skill Level</option>\n                <option value=\"1\">1 (Beginner)</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5 (Advanced)</option>\n              </FormControl>\n            </InputGroup>\n\n            <br />\n\n            <InputGroup>\n              <FormControl type=\"text\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" name=\"username\" value={this.state.username} onChange={this.onChange} />\n            </InputGroup>\n            <div id=\"existing-user-message\">Username already exists. Please choose a different username.</div>\n            <br />\n\n            <InputGroup>\n              <FormControl type=\"password\" placeholder=\"Create Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" name=\"password\" value={this.state.password} onChange={this.onChange} />\n            </InputGroup>\n\n            <br />\n\n            <InputGroup>\n              <FormControl type=\"password\" placeholder=\"Confirm Password\" aria-label=\"Password Confirm\" aria-describedby=\"basic-addon1\" name=\"passwordConfirm\" value={this.state.passwordConfirm} onChange={this.onChange} />\n            </InputGroup>\n\n            <div id=\"password-fail-message\">Passwords entered do not match. Please try again.</div>\n\n            <br />\n            <Button className=\"mb-3\" type=\"submit\" variant=\"outline-primary\" onClick={this.handleSubmit}>Submit</Button>\n            <Link to=\"/\" className=\"login-page-return mb-3\">Back to Login Page</Link>\n\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default createAccount;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>Jamster ©2019</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./pages/dashboard\";\nimport MyProfile from \"./pages/myProfile\";\nimport CreateSession from \"./pages/CreateSession\";\nimport FindSession from \"./pages/FindSession\";\nimport Login from \"./pages/login\";\nimport createAccount from \"./pages/createAccount\";\n// import NotFound from \"./pages/NotFound\";\nimport Footer from \"./components/Footer\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/createAccount\" component={createAccount} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/myProfile\" component={MyProfile} />\n            <Route exact path=\"/findSession\" component={FindSession} />\n            <Route exact path=\"/createSession\" component={CreateSession} />\n          {/* <Route path=\"*\" component={NotFound} /> */}\n        </Switch>\n      </Router>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}