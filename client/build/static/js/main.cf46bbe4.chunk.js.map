{"version":3,"sources":["components/SidebarNav/index.js","pages/dashboard/index.js","pages/myProfile/index.js","API/api.js","pages/CreateSession/index.js","components/SessionCardWithJoin/index.js","components/SessionCardWithoutJoin/index.js","pages/FindSession/index.js","pages/login/index.js","pages/createAccount/index.js","pages/NotFound/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["sidebarNav","state","collapsed","handleCurrentPageCheck","_this","props","currentPagePath","document","getElementsByTagName","classList","add","handleLogOut","localStorage","clear","handleExpand","getElementById","style","width","marginLeft","handleCollapse","handleSidebarChange","toggle","setState","this","react_default","a","createElement","id","react_router_dom","to","onClick","className","children","Component","Dashboard","SidebarNav","Container_default","Jumbotron_default","Row_default","Col_default","Card_default","Body","Title","Text","href","UserInfo","username","getItem","instrument","parseInt","skillLevel","renderInstrumentName","instrumentId","window","location","pathname","xl","lg","md","sm","xs","src","alt","Button_default","variant","size","DropdownButton_default","title","DropdownItem_default","Header","ListGroup_default","Item","api","userLogin","usernameData","axios","post","createNewUser","createUserData","getJamSessions","get","getUserName","userId","createNewSession","createSessionData","viewJamSession","sessionId","joinSession","joiningUserData","put","CreateSession","sessionName","collaborators","collaboratorsArr","sessionDate","sessionTime","sessionDetails","handleFormSubmit","event","preventDefault","alert","name","date","time","description","usr1","inst1","skillLevel1","inst2","skillLevel2","inst3","skillLevel3","inst4","skillLevel4","inst5","skillLevel5","API","then","sessionData","catch","err","console","log","handleChange","_event$target","target","value","Object","defineProperty","handleArrayChange","copy","toConsumableArray","handleCollaborators","createCollaboratorsForm","collaboratorForms","_loop","i","push","key","Form_default","Group","controlId","Label","Control","as","onChange","defaultValue","onSubmit","rows","placeholder","type","SessionCardWithJoin","fontWeight","fontSize","SessionCardWithoutJoin","FindSession","jamSessions","jamSessionsData","data","renderSessions","usr2","skill_level2","components_SessionCardWithJoin","scheduled_date","scheduled_time","joinJamSession","usr3","skill_level3","usr4","skill_level4","usr5","skill_level5","components_SessionCardWithoutJoin","positionId","userDataObj","userPosition","reload","_this2","length","map","session","textAlign","login","password","handleSubmit","userData","setItem","instrument_id","skill_level","replace","InputGroup_default","FormControl_default","aria-label","aria-describedby","color","createAccount","instrumentValue","passwordConfirm","dataResponse","NotFound","handleReturnToLogin","Footer","App","react_router","exact","path","component","Login","MyProfile","components_Footer","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf46bbe4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./style.css\";\n\nclass sidebarNav extends Component {\n\n  // State that holds a boolean value representing whether or not the side navbar is collapsed. Default/starts off as true.\n  state = {\n    collapsed: true\n  }\n\n  // Calls the function that checks the current page on every component mount.\n  componentDidMount() {\n    this.handleCurrentPageCheck();\n  }\n\n  // Function that checks which pahe the user is currently on and adds a class to the <a> element to give it special styling.\n  handleCurrentPageCheck = () => {\n\n    // variable currentPage is equal to the pathURL being passed as an argument.\n    const currentPage = this.props.currentPagePath;\n\n    // currentLink is referencing the specific <a> element that is the current pages URL path.\n    let currentLink;\n\n    // switch case for each URL and its relating <a> element in the side navbar.\n    switch (currentPage) {\n      case \"/myProfile\":\n        currentLink = document.getElementsByTagName(\"a\")[1];\n        currentLink.classList.add(\"current-page\");\n        break;\n\n      case \"/findSession\":\n        currentLink = document.getElementsByTagName(\"a\")[2];\n        currentLink.classList.add(\"current-page\");\n        break;\n\n      case \"/createSession\":\n        currentLink = document.getElementsByTagName(\"a\")[3];\n        currentLink.classList.add(\"current-page\");\n        break;\n\n      default:\n        currentLink = document.getElementsByTagName(\"a\")[0];\n        currentLink.classList.add(\"current-page\");\n        break;\n    }\n  }\n\n  // Function that handles the logout, clears local storage of any user info.\n  handleLogOut = () => {\n    localStorage.clear();\n  }\n\n  // Function that handles expanding the navbar.\n  handleExpand = () => {\n    document.getElementById(\"sidebarNav\").style.width = \"300px\";\n    document.getElementById(\"main\").style.marginLeft = \"300px\";\n  }\n\n  // Function that collapses the navbar.\n  handleCollapse = () => {\n    document.getElementById(\"sidebarNav\").style.width = \"0\";\n    document.getElementById(\"main\").style.marginLeft = \"0\";\n  }\n\n  // Function that checks if the navbar needs to be expanded or collapsed, depending on the state. Switches the state of collapsed to the opposite of what is was at.\n  handleSidebarChange = () => {\n    document.getElementById(\"openbtn\").classList.toggle(\"sidebar-close-icon\");\n    this.state.collapsed ? this.handleExpand() : this.handleCollapse();\n    this.setState({ collapsed: !this.state.collapsed });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div id=\"sidebarNav\">\n          <ul>\n            <Link to=\"/dashboard\" id=\"dashboardLink\"><li>Dashboard</li></Link>\n            <Link to=\"/myProfile\"><li>My Profile</li></Link>\n            <Link to=\"/findSession\"><li>Find Sessions</li></Link>\n            <Link to=\"/createSession\"><li>Create Session</li></Link>\n            <Link to=\"/\" onClick={this.handleLogOut}><li>Logout</li></Link>\n          </ul>\n        </div>\n\n        <div id=\"main\">\n          <button id=\"openbtn\" onClick={this.handleSidebarChange}>\n            <div className=\"bar-icon1\"></div>\n            <div className=\"bar-icon2\"></div>\n            <div className=\"bar-icon3\"></div>\n          </button>\n        </div>\n\n        {this.props.children}\n\n      </div>\n    );\n  }\n}\n\nexport default sidebarNav;","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport SidebarNav from \"../../components/SidebarNav\";\n\nimport \"./style.css\";\n\nfunction Dashboard() {\n  return (\n    <SidebarNav>\n      <Container>\n        <Jumbotron className=\"jumboBg\">\n          <Row>\n            <Col>\n              <div className=\"jumboText\">\n                <h1 className=\"text-center\">Welcome to Jamster!</h1>\n                <p className=\"jumboP text-center\">Connect with musicians in your area.</p>\n              </div>\n            </Col>\n          </Row>\n        </Jumbotron>\n        <Row>\n          <Col>\n            <Card className=\"text-center\">\n              <Card.Body>\n                <Card.Title>My Profile</Card.Title>\n                <Card.Text>\n                  <a className=\"dashBtn\" href=\"/myprofile\"> <i className=\"fas fa-id-card fa-5x\" /></a>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Card className=\"text-center\">\n              <Card.Body>\n                <Card.Title>Create Session</Card.Title>\n                <Card.Text>\n                  <a className=\"dashBtn\" href=\"/createsession\"> <i className=\"fas fa-edit fa-5x\" /></a>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </SidebarNav>\n  );\n}\n\nexport default Dashboard;","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport DropdownItem from \"react-bootstrap/DropdownItem\";\nimport SidebarNav from \"../../components/SidebarNav\";\n\nclass UserInfo extends Component {\n    state = {\n        username: localStorage.getItem(\"username\"),\n        instrument: parseInt(localStorage.getItem(\"instrumentId\")),\n        skillLevel: parseInt(localStorage.getItem(\"skillLevel\")),\n    }\n\n    renderInstrumentName = (instrumentId) => {\n        switch (instrumentId) {\n            case 1:\n                return \"Bass\"\n            case 2:\n                return \"Drums\"\n            case 3:\n                return \"Guitar\"\n            case 4:\n                return \"Keyboard\"\n            case 5:\n                return \"Vocals\"\n            default:\n                return \"Unknown Instrument!\"\n        }\n    }\n\n    render() {\n        return (\n            <SidebarNav currentPagePath={window.location.pathname}>\n                <Container>\n                    <Jumbotron className=\"jumboBg\">\n                        <Row>\n                            <Col>\n                                <div className=\"jumboText\">\n                                    <h1 className=\"text-center mb-4\">My Profile</h1>\n                                </div>\n\n                            </Col>\n                        </Row>\n                    </Jumbotron>\n                    <Card>\n\n                        <Row>\n                            <Col xl={6} lg={6} md={6} sm={12} xs={12}>\n                                <img src=\"https://via.placeholder.com/300x300\" alt=\"null\" />\n                                <br />\n                                <Button variant=\"info\" size=\"lg\" className=\"mt-2 mr-1\">Edit Profile</Button>\n                                <DropdownButton className=\"mt-2 mr-1\" style={{ 'width': '187px' }} id=\"dropdown-basic-button\" title=\"Add Instrument\" size=\"lg\">\n                                    <DropdownItem href=\"#/action-1\">Harp</DropdownItem>\n                                    <DropdownItem href=\"#/action-2\">Organ</DropdownItem>\n                                    <DropdownItem href=\"#/action-3\">Hydrolauphone</DropdownItem>\n                                    <DropdownItem href=\"#/action-4\">Thoramin</DropdownItem>\n                                    <DropdownItem href=\"#/action-5\">Jaws Harp</DropdownItem>\n                                    <DropdownItem href=\"#/action-6\">Ocarina</DropdownItem>\n                                </DropdownButton>\n                                <DropdownButton variant=\"danger\" className=\"mt-2 mr-1\" style={{ 'width': '143px' }} id=\"dropdown-basic-button\" title=\"Skill Level\" size=\"lg\">\n                                    <DropdownItem href=\"#/action-1\">1</DropdownItem>\n                                    <DropdownItem href=\"#/action-2\">2</DropdownItem>\n                                    <DropdownItem href=\"#/action-3\">3</DropdownItem>\n                                    <DropdownItem href=\"#/action-4\">4</DropdownItem>\n                                    <DropdownItem href=\"#/action-6\">5</DropdownItem>\n                                </DropdownButton>\n                            </Col>\n\n                            <Col xl={6} lg={6} md={6} sm={12} xs={12}>\n\n                                <Card>\n                                    <Card.Header><h2>My Info</h2></Card.Header>\n                                    <Card.Body>\n                                        <Card.Title><h3>Username:</h3></Card.Title>\n                                        <h5>{this.state.username}</h5>\n                                        <hr />\n                                        <hr />\n                                        <Card.Title><h3>Instruments:</h3></Card.Title>\n                                        <ListGroup>\n                                            <ListGroup.Item variant=\"success\">\n                                                <h4>\n                                                    {this.renderInstrumentName(this.state.instrument)}\n                                                </h4>\n                                                <h5>Skill Level: {this.state.skillLevel}</h5></ListGroup.Item>\n                                        </ListGroup>\n                                    </Card.Body>\n                                </Card>\n\n                            </Col>\n                        </Row>\n                    </Card>\n                </Container>\n            </SidebarNav>\n        );\n    }\n}\n\nexport default UserInfo;","import axios from \"axios\";\n\nexport default {\n    // login call\n    userLogin: function (usernameData) {\n        // I think it's a POST request since we need to access what the user entered into the fields.\n        return axios.post(\"/api/jamster/login\", usernameData);\n    },\n    // create account call\n    createNewUser: function (createUserData) {\n        return axios.post(\"/api/jamster/createNewUser\", createUserData);\n    },\n    // find sessions call\n    getJamSessions: function () {\n        return axios.get(\"/api/jamster/sessions\");\n    },\n    getUserName: function(userId) {\n        return axios.post(\"/api/jamster/getUsername\", userId);\n    },\n    // create a session call\n    createNewSession: function (createSessionData) {\n        return axios.post(\"/api/jamster/sessions\", createSessionData);\n    },\n    // get session info\n    viewJamSession: function (sessionId) {\n        return axios.get(\"/api/jamster/sessions/\" + sessionId);\n    },\n    // joining a jam session\n    joinSession: function(joiningUserData) {\n        return axios.put(\"/api/jamster/sessions\", joiningUserData);\n    }\n}","import React, { Component } from \"react\";\nimport API from \"../../API/api\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport SidebarNav from \"../../components/SidebarNav\";\n\nimport \"./style.css\";\n\nclass CreateSession extends Component {\n    state = {\n        sessionName: \"\",\n        collaborators: 0,\n        collaboratorsArr: [\n            {\n                instrument: \"\",\n                skillLevel: \"\"\n            },\n            {\n                instrument: \"\",\n                skillLevel: \"\"\n            },\n            {\n                instrument: \"\",\n                skillLevel: \"\"\n            },\n            {\n                instrument: \"\",\n                skillLevel: \"\"\n            },\n            {\n                instrument: \"\",\n                skillLevel: \"\"\n            }\n        ],\n        sessionDate: \"\",\n        sessionTime: \"\",\n        sessionDetails: \"\"\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        if (!this.state.sessionName ||\n            !this.state.sessionDate ||\n            !this.state.collaboratorsArr ||\n            !this.state.sessionTime ||\n            !this.state.collaboratorsArr[0] ||\n            !this.state.collaboratorsArr[1]) {\n            alert(\"Please Complete the Required Fields\");\n        } else if (this.state.collaborators === 0) {\n            alert(\"Please Select at Least 1 Collaborator\");\n        } else {\n            alert(\"Time to Jam!\");\n\n            const createSessionData = {\n                name: this.state.sessionName,\n                date: this.state.sessionDate,\n                time: this.state.sessionTime,\n                description: this.state.sessionDetails,\n                usr1: parseInt(localStorage.getItem(\"userId\")),\n                inst1: parseInt(localStorage.getItem(\"instrumentId\")),\n                skillLevel1: parseInt(localStorage.getItem(\"skillLevel\")),\n                inst2: this.state.collaboratorsArr[1].instrument,\n                skillLevel2: this.state.collaboratorsArr[1].skillLevel,\n                inst3: this.state.collaboratorsArr[2].instrument || null,\n                skillLevel3: this.state.collaboratorsArr[2].skillLevel || null,\n                inst4: this.state.collaboratorsArr[3].instrument || null,\n                skillLevel4: this.state.collaboratorsArr[3].skillLevel || null,\n                inst5: this.state.collaboratorsArr[4].instrument || null,\n                skillLevel5: this.state.collaboratorsArr[4].skillLevel || null\n            }\n\n            API.createNewSession(createSessionData)\n                .then((sessionData) => {\n                    this.setState({\n                        sessionName: \"\",\n                        collaboratorsArr: [\n                            {\n                                instrument: \"\",\n                                skillLevel: \"\"\n                            },\n                            {\n                                instrument: \"\",\n                                skillLevel: \"\"\n                            },\n                            {\n                                instrument: \"\",\n                                skillLevel: \"\"\n                            },\n                            {\n                                instrument: \"\",\n                                skillLevel: \"\"\n                            },\n                            {\n                                instrument: \"\",\n                                skillLevel: \"\"\n                            }\n                        ],\n                        collaborators: \"0\",\n                        sessionDate: \"\",\n                        sessionTime: \"\",\n                        sessionDetails: \"\"\n                    });\n                })\n                .catch((err) => console.log(err));\n        }\n\n    };\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    // Method for handling an array of collaborators and their info\n    // Passing in the event and the 'id' as arguments. id = whatever index the collaborator is at.\n    handleArrayChange = (event, id) => {\n        const name = event.target.name;\n        let value = event.target.value;\n        // Making a copy of the state's array of collaborators.\n        let copy = [...this.state.collaboratorsArr];\n\n        // parseInt the instrumentId or skill level into a number value\n        value = parseInt(value);\n\n        // Setting the name equal to the changed value at the appropriate index location.\n        copy[id][name] = value;\n\n        // Setting the state's collaborators array equal to the newly updated copy array.\n        this.setState({\n            collaboratorsArr: copy\n        });\n    }\n\n    handleCollaborators = (event) => {\n        this.setState({\n            collaborators: parseInt(event.target.value)\n        });\n    }\n\n    createCollaboratorsForm = () => {\n        let collaboratorForms = [];\n\n        for (let i = 0; i < this.state.collaborators; i++) {\n            collaboratorForms.push(\n                <Row key={i}>\n                    <Col>\n                        <Form.Group controlId=\"sessionForm.Instrument\">\n                            <Form.Label>Instrument (Required)</Form.Label>\n                            <Form.Control as=\"select\" onChange={(event) => this.handleArrayChange(event, i)} name=\"instrument\">\n                                <option defaultValue=\"\">Choose...</option>\n                                <option value=\"1\">Bass</option>\n                                <option value=\"2\">Drums</option>\n                                <option value=\"3\">Guitar</option>\n                                <option value=\"4\">Keyboard</option>\n                                <option value=\"5\">Vocals</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Col>\n                    <Col>\n                        <Form.Group controlId=\"sessionForm.Skill\">\n                            <Form.Label>Skill Level (Required)</Form.Label>\n                            <Form.Control as=\"select\" onChange={(event) => this.handleArrayChange(event, i)} name=\"skillLevel\">\n                                <option defaultValue=\"\">Choose...</option>\n                                <option value=\"1\">1 (Beginner)</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5 (Advanced)</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Col>\n                </Row >\n            );\n        };\n        return collaboratorForms;\n    }\n\n    render() {\n        return (\n            <SidebarNav currentPagePath={window.location.pathname}>\n                <Container>\n                    <Jumbotron className=\"jumboBg\">\n                        <Row>\n                            <Col>\n\n                                <div className=\"jumboText\">\n                                    <h1 className=\"text-center\">Create Session</h1>\n\n                                    <p className=\"jumboP text-center\">Create Your Own Jam Session Below!</p>\n                                </div>\n\n                            </Col>\n                        </Row>\n                    </Jumbotron>\n\n                    <Row>\n                        <Col>\n                            <Card>\n\n                                <Form className=\"m-4\" onSubmit={this.handleFormSubmit}>\n\n                                    <Row>\n                                        <Col>\n                                            <Form.Group controlId=\"sessionForm.Name\">\n                                                <Form.Label>Session Name (Required)</Form.Label>\n                                                <Form.Control as=\"textarea\" rows=\"1\" placeholder=\"Session Name\" onChange={this.handleChange} name=\"sessionName\" value={this.state.sessionName} />\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group controlId=\"sessionForm.Collaborators\">\n                                                <Form.Label>Number of Collaborators (Required)</Form.Label>\n                                                <Form.Control as=\"select\" onChange={this.handleCollaborators} name=\"collaborators\">\n                                                    <option defaultValue=\"0\">Choose...</option>\n                                                    <option value=\"1\">1</option>\n                                                    <option value=\"2\">2</option>\n                                                    <option value=\"3\">3</option>\n                                                    <option value=\"4\">4</option>\n                                                    <option value=\"5\">5</option>\n                                                </Form.Control>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n\n                                    {this.createCollaboratorsForm()}\n\n                                    <Row>\n                                        <Col>\n                                            <Form.Group controlId=\"sessionForm.Date\">\n                                                <Form.Label>Date (Required)</Form.Label>\n                                                <Form.Control type=\"date\" placeholder=\"\" onChange={this.handleChange} name=\"sessionDate\" value={this.state.sessionDate} />\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group controlId=\"sessionForm.Time\">\n                                                <Form.Label>Time (Required)</Form.Label>\n                                                <Form.Control type=\"time\" placeholder=\"\" onChange={this.handleChange} name=\"sessionTime\" value={this.state.sessionTime} />\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group controlId=\"sessionForm.Details\">\n                                                <Form.Label>Session Details (Optional)</Form.Label>\n                                                <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Add Any Additional Session Details\" onChange={this.handleChange} name=\"sessionDetails\" value={this.state.sessionDetails} />\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Label>Your Session(s)</Form.Label>\n                                            <Card>\n                                                <Card.Body>\n                                                    <Card.Text>\n                                                        <li>{this.state.sessionName}</li>\n                                                    </Card.Text>\n                                                </Card.Body>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n\n\n                                    <Button variant=\"primary\" type=\"submit\">\n                                        Submit\n                                    </Button>\n\n                                </Form>\n\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </SidebarNav>\n        );\n    }\n}\n\nexport default CreateSession;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nimport \"./style.css\";\n\nfunction SessionCardWithJoin(props) {\n    return (\n        <Card>\n            <Row>\n                <Col xl=\"12\" className=\"mb-3\">\n                    <Card.Header className=\"header\" as=\"h2\">{props.sessionName}</Card.Header>\n                </Col>\n                {/* <Col xl=\"12\">\n                    <h3 style={{ \"text-align\": \"center\" }}>Collaborators / Band Members</h3>\n                </Col> */}\n                <Col xl=\"6\">\n                    <Card>\n                        {/* <Card.Header as=\"h4\">\n                            {.name}\n                        </Card.Header> */}\n                        <Card.Body>\n                            <Card.Text>\n                                <ListGroup>\n                                    <ListGroup.Item>\n                                        <span style={{ \"fontWeight\": \"500\", \"fontSize\": \"125%\" }}>Jam Session Date: </span>\n                                        <span style={{ \"fontWeight\": \"450\", \"fontSize\": \"115%\" }}>{props.sessionDate} at {props.sessionTime}</span>\n                                        {/* <span style={{ \"font-weight\": \"500\", \"font-size\": \"125%\" }}>Instrument: </span>\n                                        <span style={{ \"font-weight\": \"450\", \"font-size\": \"115%\" }}>{props.instrument}</span> */}\n                                    </ListGroup.Item>\n                                    {/* <ListGroup.Item>\n                                        <span style={{ \"font-weight\": \"500\", \"font-size\": \"125%\" }}>Skill Level: </span>\n                                        <span style={{ \"font-weight\": \"450\", \"font-size\": \"115%\" }}>{props.skillLevel}</span>\n                                    </ListGroup.Item> */}\n                                </ListGroup>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                <Col xl=\"12\">\n                    <h4>Session Details</h4>\n                    <p>{props.sessionDetails}</p>\n                </Col>\n                <Col>\n                    <Button variant=\"primary\" size=\"lg\" onClick={props.onClick}>Join Session</Button>\n                </Col>\n            </Row>\n        </Card>\n    );\n}\n\nexport default SessionCardWithJoin;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nfunction SessionCardWithoutJoin(props) {\n    return (\n        <Card>\n            <Row>\n                <Col xl=\"12\" className=\"mb-3\">\n                    <Card.Header className=\"header\" as=\"h2\">{props.sessionName}</Card.Header>\n                </Col>\n                {/* <Col xl=\"12\">\n                    <h3 style={{ \"text-align\": \"center\" }}>Collaborators / Band Members</h3>\n                </Col> */}\n                <Col xl=\"6\">\n                    <Card>\n                        {/* <Card.Header as=\"h4\">\n                            {.name}\n                        </Card.Header> */}\n                        <Card.Body>\n                            <Card.Text>\n                                <ListGroup>\n                                    <ListGroup.Item>\n                                        <span style={{ \"fontWeight\": \"500\", \"fontSize\": \"125%\" }}>Jam Session Date: </span>\n                                        <span style={{ \"fontWeight\": \"450\", \"fontSize\": \"115%\" }}>{props.sessionDate} at {props.sessionTime}</span>\n                                        {/* <span style={{ \"font-weight\": \"500\", \"font-size\": \"125%\" }}>Instrument: </span>\n                                        <span style={{ \"font-weight\": \"450\", \"font-size\": \"115%\" }}>{props.instrument}</span> */}\n                                    </ListGroup.Item>\n                                    {/* <ListGroup.Item>\n                                        <span style={{ \"font-weight\": \"500\", \"font-size\": \"125%\" }}>Skill Level: </span>\n                                        <span style={{ \"font-weight\": \"450\", \"font-size\": \"115%\" }}>{props.skillLevel}</span>\n                                    </ListGroup.Item> */}\n                                </ListGroup>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                <Col xl=\"12\">\n                    <h4>Session Details</h4>\n                    <p>{props.sessionDetails}</p>\n                </Col>\n            </Row>\n        </Card>\n    );\n}\n\nexport default SessionCardWithoutJoin;","import React, { Component } from \"react\";\nimport API from \"../../API/api\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SessionCardWithJoin from \"../../components/SessionCardWithJoin\";\nimport SessionCardWithoutJoin from \"../../components/SessionCardWithoutJoin\";\nimport SidebarNav from \"../../components/SidebarNav\";\n\nclass FindSession extends Component {\n    state = {\n        jamSessions: []\n    }\n\n    componentDidMount() {\n        this.getJamSessions();\n    }\n\n    getJamSessions = () => {\n        API.getJamSessions()\n            .then((jamSessionsData) => {\n                this.setState({\n                    jamSessions: jamSessionsData.data\n                });\n            })\n            .catch((err) => console.log(err));\n    }\n\n    renderSessions = (sessionData) => {\n        if (sessionData.usr2 === null && localStorage.getItem(\"instrumentId\") == sessionData.inst2 && localStorage.getItem(\"skillLevel\") >= sessionData.skill_level2) {\n            return <SessionCardWithJoin\n                key={sessionData.id}\n                sessionName={sessionData.name}\n                sessionDetails={sessionData.description}\n                sessionDate={sessionData.scheduled_date}\n                sessionTime={sessionData.scheduled_time}\n                onClick={() => this.joinJamSession(2, sessionData.id)}\n            />\n        }\n        else if (sessionData.usr3 === null && localStorage.getItem(\"instrumentId\") == sessionData.inst3 && localStorage.getItem(\"skillLevel\") >= sessionData.skill_level3) {\n            return <SessionCardWithJoin\n                key={sessionData.id}\n                sessionName={sessionData.name}\n                sessionDetails={sessionData.description}\n                sessionDate={sessionData.scheduled_date}\n                sessionTime={sessionData.scheduled_time}\n                onClick={() => this.joinJamSession(3, sessionData.id)}\n            />\n        }\n\n        else if (sessionData.usr4 === null && localStorage.getItem(\"instrumentId\") == sessionData.inst4 && localStorage.getItem(\"skillLevel\") >= sessionData.skill_level4) {\n            return <SessionCardWithJoin\n                key={sessionData.id}\n                sessionName={sessionData.name}\n                sessionDetails={sessionData.description}\n                sessionDate={sessionData.scheduled_date}\n                sessionTime={sessionData.scheduled_time}\n                onClick={() => this.joinJamSession(4, sessionData.id)}\n            />\n        }\n\n        else if (sessionData.usr5 === null && localStorage.getItem(\"instrumentId\") == sessionData.inst5 && localStorage.getItem(\"skillLevel\") >= sessionData.skill_level5) {\n            return <SessionCardWithJoin\n                key={sessionData.id}\n                sessionName={sessionData.name}\n                sessionDetails={sessionData.description}\n                sessionDate={sessionData.scheduled_date}\n                sessionTime={sessionData.scheduled_time}\n                onClick={() => this.joinJamSession(5, sessionData.id)}\n            />\n        }\n\n        else {\n            return <SessionCardWithoutJoin\n                key={sessionData.id}\n                sessionName={sessionData.name}\n                sessionDetails={sessionData.description}\n                sessionDate={sessionData.scheduled_date}\n                sessionTime={sessionData.scheduled_time}\n            />\n        }\n    }\n\n    joinJamSession = (positionId, sessionId) => {\n        const userDataObj = {\n            userPosition: positionId,\n            userId: localStorage.getItem(\"userId\"),\n            sessionId: sessionId\n        }\n        API.joinSession(userDataObj)\n            .then((sessionData) => {\n                alert(\"Session Joined!\");\n                window.location.reload();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    render() {\n        return (\n            <SidebarNav currentPagePath={window.location.pathname}>\n                <Container>\n                    <Jumbotron className=\"jumboBg\">\n                        <Row>\n                            <Col>\n\n                                <div className=\"jumboText\">\n                                    <h1 className=\"text-center\">Find Session</h1>\n\n                                    <p className=\"jumboP text-center\">See sessions created by other musicians!</p>\n                                </div>\n\n                            </Col>\n                        </Row>\n                    </Jumbotron>\n\n                    {this.state.jamSessions.length ? (\n                        this.state.jamSessions.map((session) => this.renderSessions(session)\n                        )) : (\n                            <h3 style={{ \"textAlign\": \"center\" }}>NO JAM SESSIONS!</h3>\n                        )\n                    }\n                </Container>\n            </SidebarNav>\n        );\n    }\n}\n\nexport default FindSession;","import React, { Component } from \"react\";\nimport API from \"../../API/api\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\n\nimport \"./style.css\";\n\nclass login extends Component {\n\n  state = {\n    username: \"\",\n    password: \"\"\n  }\n\n  onChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  // Function for when the user submits their log in info\n  handleSubmit = () => {\n    \n    // Creating an object with the usernameto send to the backend\n    const usernameData = {\n      username: this.state.username\n    }\n\n    API.userLogin(usernameData)\n      .then((userData) => {\n        if (userData.data[1] !== null && userData.data[1] === this.state.password) {\n          // storing the username in localstorage if the login info is valid\n          localStorage.setItem(\"username\", this.state.username);\n          localStorage.setItem(\"userId\", parseInt(userData.data[0].id));\n          localStorage.setItem(\"instrumentId\", parseInt(userData.data[0].instrument_id));\n          localStorage.setItem(\"skillLevel\", parseInt(userData.data[0].skill_level));\n          window.location.replace(\"/dashboard\");\n        }\n        else {\n          alert(\"Incorrect login info!\");\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <div id=\"login-background\">\n              <h1>Welcome to Jamster</h1>\n              <br />\n              <ul>\n                <li>Connect with other musicians</li>\n                <li>Create a jam session</li>\n                <li>Join other jam sessions</li>\n              </ul>\n            </div>\n          </Col>\n        </Row>\n\n        <br />\n\n        <Row>\n          <Col>\n            <h2 className=\"text-white login-message\">Log in to get your Jam on!</h2>\n          </Col>\n        </Row>\n\n        <br />\n\n        <Row className=\"login-form\">\n          <Col xs=\"10\" sm=\"10\" md=\"8\" lg=\"8\" xl=\"5\">\n            <InputGroup size=\"lg\">\n              <FormControl id=\"username-login\" type=\"text\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" name=\"username\" value={this.state.username} onChange={this.onChange} />\n            </InputGroup>\n            <br />\n            <InputGroup size=\"lg\">\n              <FormControl id=\"password-login\" type=\"password\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" name=\"password\" value={this.state.password} onChange={this.onChange} />\n            </InputGroup>\n            <br />\n            <Button className=\"p-2 mr-3 mb-4\" type=\"submit\" variant=\"outline-primary\" onClick={this.handleSubmit}>Log In</Button>\n            <span style={{ \"color\": \"#FFFFFF\", \"fontSize\": \"120%\", \"fontWeight\": \"550\" }}>or</span>\n            <Link to=\"/createAccount\"><Button className=\"p-2 ml-3 mb-4\" variant=\"outline-info\">Create Account</Button></Link>\n          </Col>\n        </Row>\n\n      </Container>\n    );\n  }\n}\n\nexport default login;\n","import React, { Component } from \"react\";\nimport API from \"../../API/api\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\n\nimport \"./style.css\";\n\nclass createAccount extends Component {\n  state = {\n    instrumentValue: \"\",\n    skillLevel: 0,\n    username: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  }\n\n  onChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit = () => {\n\n    const createUserData = {\n      username: this.state.username,\n      password: this.state.password,\n      skillLevel: parseInt(this.state.skillLevel),\n      instrumentId: parseInt(this.state.instrumentValue)\n    }\n\n    API.createNewUser(createUserData)\n      .then((dataResponse) => {\n        localStorage.setItem(\"username\", this.state.username);\n        localStorage.setItem(\"userId\", dataResponse.data.id);\n        localStorage.setItem(\"instrumentId\", parseInt(this.state.instrumentValue));\n        localStorage.setItem(\"skillLevel\", parseInt(this.state.skillLevel));\n\n        window.location.replace(\"/dashboard\");\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    return (\n        <Container>\n          <Row>\n            <Col>\n              <h1 className=\"welcome-header\">Welcome to Jamster!</h1>\n              <p className=\"welcome-message\">To create an account, enter your information below.</p>\n            </Col>\n          </Row>\n\n          <br />\n\n          <Row className=\"create-form\">\n            <Col xs=\"12\" sm=\"9\" md=\"6\" lg=\"5\" xl=\"5\">\n              <InputGroup>\n                <FormControl as=\"select\" placeholder=\"Instrument\" aria-label=\"Instrument\" aria-describedby=\"basic-addon1\" name=\"instrumentValue\" value={this.state.instrumentValue} onChange={this.onChange}>\n                  <option defaultValue=\"\">Instrument</option>\n                  <option value=\"1\">Bass</option>\n                  <option value=\"2\">Drums</option>\n                  <option value=\"3\">Guitar</option>\n                  <option value=\"4\">Keyboard</option>\n                  <option value=\"5\">Vocals</option>\n                </FormControl>\n              </InputGroup>\n\n              <br />\n\n              <InputGroup>\n                <FormControl as=\"select\" placeholder=\"Skill Level\" aria-label=\"Skill Level\" aria-describedby=\"basic-addon1\" name=\"skillLevel\" value={this.state.skillLevel} onChange={this.onChange}>\n                  <option defaultValue=\"\">Skill Level</option>\n                  <option value=\"1\">1 (Beginner)</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5 (Advanced)</option>\n                </FormControl>\n              </InputGroup>\n\n              <br />\n\n              <InputGroup>\n                <FormControl type=\"text\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" name=\"username\" value={this.state.username} onChange={this.onChange} />\n              </InputGroup>\n\n              <br />\n\n              <InputGroup>\n                <FormControl type=\"password\" placeholder=\"Create Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" name=\"password\" value={this.state.password} onChange={this.onChange} />\n              </InputGroup>\n\n              <br />\n\n              <InputGroup>\n                <FormControl type=\"password\" placeholder=\"Confirm Password\" aria-label=\"Password Confirm\" aria-describedby=\"basic-addon1\" name=\"passwordConfirm\" value={this.state.passwordConfirm} onChange={this.onChange} />\n              </InputGroup>\n\n              <br />\n\n              <Button className=\"mb-3\" type=\"submit\" variant=\"outline-primary\" onClick={this.handleSubmit}>Submit</Button>\n              <Link to=\"/\" className=\"login-page-return mb-3\">Back to Login Page</Link>\n\n            </Col>\n          </Row>\n        </Container>\n    );\n  }\n}\n\nexport default createAccount;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport \"./style.css\";\n\nclass NotFound extends Component {\n\n    handleReturnToLogin = () => {\n        localStorage.clear();\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <h1 className=\"notFound-message\">404 Not Found</h1>\n                        <br />\n                        <br />\n                        <div className=\"notFound-links\">\n                            <Link to=\"/dashboard\" className=\"notFound-link\">Back to Dashboard</Link>\n                            <Link to=\"/\" onClick={this.handleReturnToLogin} className=\"notFound-link\">Back to Log in Page</Link>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\nexport default NotFound;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>Jamster ©2019</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./pages/dashboard\";\nimport MyProfile from \"./pages/myProfile\";\nimport CreateSession from \"./pages/CreateSession\";\nimport FindSession from \"./pages/FindSession\";\nimport Login from \"./pages/login\";\nimport createAccount from \"./pages/createAccount\";\nimport NotFound from \"./pages/NotFound\";\nimport Footer from \"./components/Footer\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/createAccount\" component={createAccount} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/myProfile\" component={MyProfile} />\n            <Route exact path=\"/findSession\" component={FindSession} />\n            <Route exact path=\"/createSession\" component={CreateSession} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </Router>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}